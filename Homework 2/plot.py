import matplotlib.pyplot as plt

def plot_lines_vertices():
    ########
    # DATA #
    ######## 
    # 1 to 50 vertices
    complete_graph = [4.76837158203125e-07, 1.71661376953125e-06, 4.2772293090820316e-06, 1.3446807861328125e-05,
                       3.6301612854003904e-05, 9.490966796875e-05, 0.0004019927978515625, 0.0011436319351196289,
                         0.0030893802642822264, 0.007566885948181152, 0.008902277946472168, 0.021721224784851074,
                           0.023819823265075684, 0.027032947540283202, 0.06144321918487549, 0.06772722244262695, 
                           0.07425914287567138, 0.08150209903717041, 0.17726247310638427, 0.19168946743011475, 
                           0.2075067400932312, 0.22403846979141234, 0.24429854154586791, 0.25268054008483887, 
                           0.542251455783844, 0.5638184070587158, 0.5893137335777283, 0.6392216205596923, 
                           0.659415090084076, 0.6788830161094666, 0.7351232051849366, 0.7592292666435242, 
                           1.546966028213501, 1.6213651537895202, 1.7354531764984131, 1.6744328737258911, 
                           1.8386812925338745, 1.8871764183044433, 1.9509887218475341, 2.015553021430969, 
                           2.041939616203308, 2.1350868701934815, 2.3816280364990233, 4.1594080448150635,
                             4.449202632904052, 4.664060878753662, 4.76825511932373, 4.853511238098145, 
                             5.086235404014587, 5.27407398223877]
    #v1 = vertices//2 && v2 = vertices-v1  && proba 0.75
    bipartite_graphs_proba_0_75 = [6.198883056640625e-07, 2.498626708984375e-06, 5.054473876953125e-06, 2.306938171386719e-05, 
                        4.35638427734375e-05, 2.6645660400390626e-05, 6.26373291015625e-05, 0.0008439064025878906, 
                        0.001636066436767578, 0.0037578010559082033, 0.004840192794799805, 0.00984884262084961, 
                        0.011056194305419922, 0.011990413665771485, 0.02584432601928711, 0.032626256942749024, 0.026865749359130858,
                          0.03132213592529297, 0.07117236137390137, 0.06453938484191894, 0.08478665351867676, 0.08665566444396973, 
                          0.09059200286865235, 0.08735480308532714, 0.1965954065322876, 0.21200759410858155, 0.203857421875, 
                          0.22525529861450194, 0.2402186155319214, 0.2386314630508423, 0.24466490745544434, 0.26458086967468264, 
                          0.5744070291519165, 0.517125916481018, 0.612331485748291, 0.60750412940979, 0.5870484352111817, 
                          0.677439832687378, 0.6732829570770263, 0.6801554679870605, 0.7275176048278809, 0.7099969387054443, 
                          0.7340124607086181, 1.293228530883789, 1.4837038040161132, 1.517045783996582, 1.5517390727996827, 
                          1.5525490283966064, 1.5613313865661622, 1.5707940578460693]
    
    #v1 = vertices//2 && v2 = vertices-v1  && proba 0.5
    bipartite_graphs_proba_0_5 = [2.765655517578125e-07, 1.8405914306640624e-06, 1.4019012451171875e-06, 6.8378448486328124e-06, 
                                  3.108978271484375e-06, 1.7671585083007814e-05, 0.0001755046844482422, 0.0003824710845947266,
                                    0.0012528324127197266, 0.0031547069549560545, 0.001496286392211914, 0.00765777587890625, 
                                    0.007698497772216797, 0.005558042526245117, 0.008248844146728516, 0.0161350154876709, 
                                    0.018912229537963867, 0.021154565811157225, 0.04563882827758789, 0.04742358207702637, 
                                    0.056961584091186526, 0.05531964302062988, 0.05815200805664063, 0.0601731538772583, 
                                    0.1318561315536499, 0.12261991500854492, 0.14485554695129393, 0.15690281391143798, 
                                    0.13910157680511476, 0.15863652229309083, 0.14387240409851074, 0.17007710933685302, 
                                    0.3310281276702881, 0.37934911251068115, 0.37356204986572267, 0.4068788528442383, 
                                    0.34322423934936525, 0.34100732803344724, 0.4267886638641357, 0.4466080665588379, 
                                    0.4115161418914795, 0.4465475082397461, 0.4360933780670166, 0.9020549201965332, 0.8778506278991699, 
                                    0.9784825801849365, 1.0482242107391357, 1.0241164684295654, 1.0636767864227294, 1.071864227294]

    #v1 = vertices//2 && v2 = vertices-v1  && proba 1
    bipartite_graphs_proba_1 = [5.626678466796875e-07, 1.9741058349609373e-06, 3.986358642578125e-06, 1.1320114135742187e-05, 
                                2.8715133666992187e-05, 7.825851440429688e-05, 0.0003191184997558594, 0.0008454799652099609, 
                                0.001969280242919922, 0.004916648864746093, 0.005247182846069336, 0.012184247970581055, 
                                0.013555068969726563, 0.01504347801208496, 0.033450040817260746, 0.036623449325561525, 
                                0.04006699562072754, 0.04456171035766601, 0.09507817268371582, 0.10146273612976074, 
                                0.11014096736907959, 0.11586170196533203, 0.12190849781036377, 0.12966556549072267, 
                                0.27882630825042726, 0.29770264625549314, 0.3047433376312256, 0.3173740148544312, 
                                0.32940571308135985, 0.33519389629364016, 0.35538108348846437, 0.3651683807373047, 
                                0.7532084226608277, 0.7718082427978515, 0.8294676303863525, 0.8144437313079834, 
                                0.8704448223114014, 0.8739487171173096, 0.8882803916931152, 0.9427732944488525, 
                                0.9321215629577637, 0.9686610221862793, 1.0729028224945067, 2.016161584854126, 
                                2.0311660766601562, 2.1576005935668947, 2.2591298103332518, 2.2215343952178954, 2.264057731628418, 2.2920730113983154]

  
    tree_graphs = [3.910064697265625e-07, 1.392364501953125e-06, 4.549026489257812e-06, 1.5277862548828125e-05, 
                   4.7588348388671874e-05, 0.00013830184936523438, 0.00020473480224609376, 0.0005020427703857421, 
                   0.0011303424835205078, 0.002776479721069336, 0.002523336410522461, 0.004876441955566406, 
                   0.004899578094482422, 0.005290451049804687, 0.010525684356689453, 0.010175790786743164, 
                   0.010592660903930663, 0.010564746856689454, 0.021638641357421873, 0.021272869110107423, 
                   0.02167620658874512, 0.021020054817199707, 0.02213888168334961, 0.021357917785644533, 
                   0.04169120788574219, 0.04259400367736817, 0.04259414672851562, 0.044373726844787596, 
                   0.04615373611450195, 0.045694160461425784, 0.045068907737731936, 0.04570777416229248, 
                   0.08577241897583007, 0.08801970481872559, 0.08777494430541992, 0.08826022148132324, 
                   0.08707561492919921, 0.08914222717285156, 0.09040622711181641, 0.09145212173461914, 
                   0.0928426742553711, 0.0932760238647461, 0.09626102447509766, 0.17473549842834474, 0.1750394344329834, 
                   0.17913498878479003, 0.17865991592407227, 0.18160738945007324, 0.18041377067565917, 0.18067565917]
    
    # 1 to 50 vertices
    cycles = [4.482269287109375e-07, 2.0599365234375e-06, 4.1294097900390626e-06, 9.756088256835938e-06, 
              2.4662017822265624e-05, 5.626678466796875e-05, 0.00021839141845703125, 0.0005319118499755859, 
              0.001114330291748047, 0.002486572265625, 0.0023571205139160155, 0.004995079040527344, 
              0.004966201782226562, 0.005105113983154297, 0.010023260116577148, 0.010342578887939453, 
              0.010336666107177735, 0.010355396270751953, 0.02069014549255371, 0.02110232353210449, 
              0.020820975303649902, 0.02095341682434082, 0.02090327739715576, 0.020986485481262206, 
              0.04194762706756592, 0.04422273635864258, 0.04260685443878174, 0.042222023010253906, 
              0.04285264015197754, 0.04277396202087402, 0.04287598133087158, 0.043230319023132326, 
              0.08509938716888428, 0.08533289432525634, 0.08714542388916016, 0.0932884693145752, 
              0.08505139350891114, 0.08644485473632812, 0.08598370552062988, 0.08828134536743164,
                0.08713002204895019, 0.08601770401000977, 0.087664794921875, 0.17014060020446778, 
                0.17030272483825684, 0.17164931297302247, 0.18279657363891602, 0.17244930267333985, 
                0.1743234634399414, 0.17513549842834474]
    
    multigraphs = [[5.91278076171875e-07], [2.55584716796875e-06], [5.4454803466796875e-06], [1.5211105346679687e-05], 
                   [2.75421142578125e-05], [6.389617919921875e-07],[2.261161804199219e-05],[9.185791015625e-05],
                   [0.0004897499084472656], [0.0007615089416503906], [2.574920654296875e-07], [4.076004028320313e-05], 
                   [0.0012469863891601562], [0.0048094654083251955],[0.0014121341705322266],[0.01179224967956543], 
                   [0.00012783050537109374], [0.006827306747436523], [0.00908259391784668], [1.9741058349609373e-06], 
                   [0.01791112422943115],[3.006458282470703e-05],[0.008231210708618163], [9.775161743164062e-07],
                   [5.960464477539062e-07], [0.05474202632904053], [0.06880853176116944],[0.02349412441253662], 
                   [0.03530280590057373], [0.04274771213531494], [0.04868245124816895],
                   [0.0028373241424560548], [0.00016720294952392577], [0.009408831596374512], [0.017172956466674806],
                     [1.5735626220703124e-06], [5.960464477539062e-07], [0.05474202632904053],
                     [0.006364774703979492], [0.06880853176116944],[0.02349412441253662],
                   [0.007936048507690429], [0.0019209861755371093], [0.015498685836791991], [0.006827306747436523], [0.00908259391784668], [1.9741058349609373e-06],
                   [8.821487426757812e-06], [0.01706539643698],[0.05223441123962402]]
    
    # v2 = int(vertices*(4*random.random()))
    planar_graphs = [4.1961669921875e-07, 2.765655517578125e-06, 4.6539306640625e-06, 1.2731552124023437e-05, 3.436088562011719e-05, 0.000119171142578125, 0.0002524566650390625, 0.0008048343658447265, 0.0029601955413818357, 0.0021674442291259766, 0.0021722602844238283, 0.011241168975830078, 0.0075807952880859375, 0.004457492828369141, 0.009295768737792968, 0.02973146438598633, 0.015394763946533203, 0.03262368202209473, 0.04226648330688477, 0.06606844902038574, 0.05700173377990723, 0.022449755668640138, 0.052620434761047365, 0.019454455375671385, 0.08550000190734863, 0.03903801441192627, 0.04955046176910401, 0.0725567102432251, 0.12270870208740234, 0.043143486976623534, 0.1122363805770874, 0.04441545009613037, 0.21033000946044922, 0.07885885238647461, 0.24364619255065917, 0.15404338836669923, 0.16946687698364257, 0.2769505977630615, 0.27843451499938965, 0.16195302009582518, 0.21532030105590821, 0.26930060386657717, 0.2137906551361084, 0.4601102352142334, 0.15685782432556153, 0.2626064300537109, 0.5589766502380371, 0.6429465770721435, 0.45883975028991697,0.51883975028991697]

    ########
    # PLOT #
    ########
    x_values = [i for i in range(1, len(cycles)+1)]  # Replace with the actual vertex count values
    plt.figure(figsize=(10, 6))

    # Plotting each graph's data
    plt.plot(x_values, planar_graphs, label="Planar Graph", marker="o")
    plt.plot(x_values, multigraphs, label="Multigraph", marker="o")
    plt.plot(x_values, complete_graph, label="Complete Graph", marker="o")
    plt.plot(x_values, bipartite_graphs_proba_0_75, label="Bipartite Graph (p=0.75)", marker="o")
    plt.plot(x_values, bipartite_graphs_proba_0_5, label="Bipartite Graph (p=0.5)", marker="o")
    plt.plot(x_values, bipartite_graphs_proba_1, label="Bipartite Graph (p=1)", marker="o")
    plt.plot(x_values, cycles, label="Cycle Graph", marker="o")
    plt.plot(x_values, tree_graphs, label="Tree Graph", marker="o")
    

    # Adding labels and title
    plt.xlabel("Number of vertices")
    plt.ylabel("Time taken (s)")
    plt.title("FastCut performances comparisons vertices")
    plt.legend()

    # Show the plot
    plt.grid(True)
    plt.tight_layout()
    plt.savefig("./res/performance_comparison_vertices.png", format="png")
    plt.show()

def plot_lines_edges():
    ########
    # DATA #
    ######## 
    # 1 to 50 vertices
    complete_graph = [[0, 3.910064697265625e-07], [1, 2.1266937255859375e-06], [3, 4.76837158203125e-06], [6, 1.3303756713867187e-05], [10, 3.83758544921875e-05], [15, 0.00010045051574707031], [21, 0.00044773101806640627], [28, 0.0012154579162597656], [36, 0.0030382823944091796], [45, 0.007439031600952149], [55, 0.008590316772460938], [66, 0.020062646865844726], [78, 0.023533754348754883], [91, 0.02644577980041504], [105, 0.05872706413269043], [120, 0.06697846412658691], [136, 0.07257425308227539], [153, 0.08167576789855957], [171, 0.17499327659606934], [190, 0.18963062286376953], [210, 0.20030462741851807], [231, 0.22495999336242675], [253, 0.23521065711975098], [276, 0.2569300174713135], [300, 0.5114345550537109], [325, 0.5587390422821045], [351, 0.6005517244338989], [378, 0.6388750076293945], [406, 0.6418005943298339], [435, 0.6709285736083984], [465, 0.6890689611434937], [496, 0.7302225589752197], [528, 1.5064406871795655], [561, 1.5719902992248536], [595, 1.624393606185913], [630, 1.7664819240570069], [666, 1.880840539932251], [703, 1.8578696250915527], [741, 1.9370020389556886], [780, 1.980849027633667], [820, 2.0155818462371826], [861, 2.1285197734832764], [903, 2.085023593902588], [946, 4.125372505187988], [990, 4.376844024658203], [1035, 4.5912572860717775], [1081, 4.756255197525024], [1128, 4.802686166763306], [1176, 5.188976049423218], [1225, 4.911071538925171]]
    complete_graph.sort(key=lambda x: x[0])
    #v1 = vertices//2  && v2 = vertices-v1  && proba 0.75
    bipartite_graphs_proba_0_75 = [[0, 8.344650268554688e-07], [0, 6.437301635742188e-07], [23, 0.004793739318847657], [50, 0.03010103702545166], [73, 0.06622915267944336], [0, 2.384185791015625e-07], [91, 0.08095817565917969], [154, 0.23579899470011392], [0, 7.152557373046875e-07], [128, 0.267458438873291], [301, 0.5944927533467611], [117, 0.22763927777608237], [0, 6.357828776041666e-07], [271, 0.7277954419453939], [820, 3.1278789043426514], [1093, 5.291534821192424], [780, 1.942858060201009], [202, 0.8965726693471273], [438, 1.627116044362386], [585, 2.1193930308024087]]
    bipartite_graphs_proba_0_75.sort(key=lambda x: x[0])
    #v1 = vertices//2 && v2 = vertices-v1  && proba 0.5
    bipartite_graphs_proba_0_5 = [[0, 7.152557373046875e-07], [18, 0.003975486755371094], [34, 0.031876230239868165], [83, 0.08166956901550293], [98, 0.11763366063435872], [149, 0.25346573193868], [412, 1.8106989860534668], [218, 0.5424745877583822], [232, 0.4799782435099284], [177, 0.7509272893269857], [210, 0.7457437515258789], [214, 0.7448484102884928], [230, 0.8064741293589274], [250, 1.6205543677012126], [948, 4.264991680781047], [2141, 11.987702449162802], [590, 2.0666003227233887], [1108, 7.367466688156128], [1310, 8.641310850779215], [362, 2.8339704672495523], [863, 5.201987663904826]]
    bipartite_graphs_proba_0_5.sort(key=lambda x: x[0])
    #v1 = vertices//2 && v2 = vertices-v1  && proba 1
    bipartite_graphs_proba_1 = [[0, 5.006790161132813e-07], [4, 1.0538101196289063e-05], [12, 0.00028543472290039064], [0, 3.5762786865234375e-07], [36, 0.01208202838897705], [0, 5.006790161132813e-07], [78, 0.07794592380523682], [57, 0.037876558303833005], [156, 0.2730728626251221], [196, 0.31087384223937986], [84, 0.07580995559692383], [208, 0.36646122932434083], [252, 0.4220616817474365], [0, 2.384185791015625e-07], [190, 0.23868926366170248], [129, 0.31572945912679035], [360, 0.7549393177032471], [352, 0.7010308106740316], [250, 0.45311204592386883], [312, 0.5717859268188477], [930, 5.678734302520752], [240, 0.7465373675028483], [420, 1.1749719778696697], [600, 1.6424123446146648], [1176, 4.571522792180379], [915, 2.5110479990641275], [1560, 7.921180089314778], [385, 0.9160053730010986], [400, 1.7498339017232258], [912, 3.8547280629475913], [430, 1.784348964691162], [765, 2.95892063776652], [1020, 3.890806039174398], [900, 3.2850589752197266]]
    bipartite_graphs_proba_1.sort(key=lambda x: x[0])
    tree_graphs = [[0, 5.7220458984375e-07], [2, 2.3174285888671877e-06], [6, 6.237030029296875e-06], [12, 2.030372619628906e-05], [20, 6.106376647949219e-05], [30, 0.00016692161560058594], [42, 0.0002477931976318359], [56, 0.0005364227294921875], [72, 0.0011037063598632812], [90, 0.002254838943481445], [110, 0.0022994518280029298], [132, 0.0046208763122558595], [156, 0.004765806198120118], [182, 0.004906997680664062], [210, 0.009938583374023438], [240, 0.009859189987182618], [272, 0.009985542297363282], [306, 0.01024850845336914], [342, 0.019929847717285155], [380, 0.020645837783813476], [420, 0.02030148506164551], [462, 0.02055819034576416], [506, 0.020611023902893065], [552, 0.020991253852844238], [600, 0.0413494348526001], [650, 0.04164278507232666], [702, 0.04187667369842529], [756, 0.041954970359802245], [812, 0.04294819831848144], [870, 0.042781662940979], [930, 0.043450331687927245], [992, 0.04373369216918945], [1056, 0.08271539211273193], [1122, 0.08425769805908204], [1190, 0.08579306602478028], [1260, 0.08582754135131836], [1332, 0.0844304084777832], [1406, 0.0882493019104004], [1482, 0.08765087127685547], [1560, 0.08869976997375488], [1640, 0.09205689430236816], [1722, 0.09462509155273438], [1806, 0.09272174835205078], [1892, 0.17134666442871094], [1980, 0.1699218273162842], [2070, 0.17426958084106445], [2162, 0.1760106563568115], [2256, 0.17664999961853028], [2352, 0.1775458812713623], [2450, 0.17596421241760254]]
    tree_graphs.sort(key=lambda x: x[0])
    # 1 to 50 vertices
    cycles = [[1, 8.106231689453125e-07], [2, 3.337860107421875e-06], [3, 6.413459777832031e-06], [4, 1.399517059326172e-05], [5, 3.4761428833007815e-05], [6, 7.903575897216797e-05], [7, 0.00030345916748046874], [8, 0.0007268667221069336], [9, 0.0014401912689208985], [10, 0.0026660442352294924], [11, 0.002405738830566406], [12, 0.0047578573226928714], [13, 0.004899334907531738], [14, 0.004763746261596679], [15, 0.010007953643798828], [16, 0.009931826591491699], [17, 0.010135412216186523], [18, 0.01006784439086914], [19, 0.020396780967712403], [20, 0.020864176750183105], [21, 0.020267534255981445], [22, 0.021033430099487306], [23, 0.020436620712280272], [24, 0.020943355560302735], [25, 0.04182190895080566], [26, 0.041541004180908205], [27, 0.041991662979125974], [28, 0.04238982200622558], [29, 0.0422119140625], [30, 0.04231362342834473], [31, 0.04289565086364746], [32, 0.04225687980651856], [33, 0.08331332206726075], [34, 0.08588461875915528], [35, 0.08400718371073405], [36, 0.0843812624613444], [37, 0.08426554997762044], [38, 0.084503173828125], [39, 0.0863207181294759], [40, 0.08506433169047038], [41, 0.08591286341349284], [42, 0.08609501520792644], [43, 0.08479499816894531], [44, 0.16759022076924643], [45, 0.1694632371266683], [46, 0.16902701059977213], [47, 0.1706970532735189], [48, 0.1709591547648112], [49, 0.1701360543568929], [50, 0.17039831479390463], [51, 0.17329208056131998], [52, 0.17249655723571777], [53, 0.17104291915893555], [54, 0.17070221900939941], [55, 0.1735212802886963], [56, 0.18230199813842773], [57, 0.17594623565673828], [58, 0.1740856965382894], [59, 0.17961462338765463], [60, 0.34442933400472003], [61, 0.34256593386332196], [62, 0.3362723191579183], [63, 0.34216149648030597], [64, 0.34252071380615234], [65, 0.3438892364501953], [66, 0.3440830707550049], [67, 0.3451906045277913], [68, 0.34829163551330566], [69, 0.3439923922220866], [70, 0.34455331166585285], [71, 0.35362911224365234], [72, 0.34578951199849445], [73, 0.3454884688059489], [74, 0.34747131665547687], [75, 0.34746289253234863], [76, 0.34785858790079754], [77, 0.36442335446675617], [78, 0.3509550889333089], [79, 0.3697656790415446], [80, 0.3536810874938965], [81, 0.34843921661376953], [82, 0.35024436314900714], [83, 0.6822992960611979], [84, 0.6821762720743815], [85, 0.6858329772949219], [86, 0.6851933797200521], [87, 0.6885819435119629], [88, 0.6884133021036783], [89, 0.6948436896006266], [90, 0.7013352711995443], [91, 0.6942571004231771], [92, 0.6938644250233968], [93, 0.6929466724395752], [94, 0.6940983136494955], [95, 0.6937880516052246], [96, 0.6938711802164713], [97, 0.6957863966623942], [98, 0.7024240493774414]]
    cycles.sort(key=lambda x: x[0])
    multigraphs = [[0, 9.059906005859375e-07], [6, 4.034042358398437e-05], [0, 8.58306884765625e-07], [27, 5.18798828125e-05], [37, 6.333986918131511e-05], [57, 9.338061014811198e-05], [0, 6.357828776041666e-07], [97, 9.767214457194011e-05], [105, 0.0004718303680419922], [118, 5.412101745605469e-05], [136, 0.00029047330220540363], [145, 0.0006241003672281901], [155, 0.0006872018178304037], [226, 0.00046626726786295575], [257, 0.00024469693501790363], [267, 0.00023969014485677084], [276, 0.0006080468495686849], [287, 0.0002747376759847005], [297, 0.00028769175211588543], [306, 0.0006095568339029948], [316, 0.0006632804870605469], [345, 0.001613934834798177], [375, 0.0016413529713948567], [385, 0.0016103585561116536], [436, 0.0008715788523356119], [454, 0.007881641387939453], [466, 0.001039266586303711], [477, 0.0004475911458333333], [497, 0.0005575815836588541], [547, 0.0005570252736409506], [557, 0.0005337397257486979], [562, 0.053693294525146484], [586, 0.0013003349304199219], [617, 0.0006206830342610677], [635, 0.0028564135233561196], [656, 0.0014861424763997395], [666, 0.0014333724975585938], [686, 0.0015533765157063801], [695, 0.002988894780476888], [737, 0.0007247130076090494], [754, 0.014611085255940756], [767, 0.0007786750793457031], [785, 0.0033908685048421225], [817, 0.0008207956949869791], [825, 0.003594636917114258], [836, 0.001804033915201823], [845, 0.0039010842641194663], [857, 0.0008598963419596354], [866, 0.0018221537272135417], [885, 0.003971417744954427]]
    multigraphs.sort(key=lambda x: x[0])
    # v2 = int(vertices*(4*random.random()))
    planar_graphs = [[0, 1.0013580322265625e-06], [10, 0.003071284294128418], [11, 0.0029209136962890627], [24, 0.0004835605621337891], [38, 1.9470850626627605e-05], [46, 0.00011165936787923177], [31, 0.0443572998046875], [67, 6.0399373372395836e-05], [80, 0.32805736859639484], [87, 7.700920104980469e-05], [90, 0.013518253962198893], [93, 0.0491333802541097], [117, 0.00010228157043457031], [118, 0.033143043518066406], [137, 0.00012826919555664062], [114, 0.24148162206013998], [150, 0.02268520991007487], [152, 0.1486670176188151], [145, 0.30846063296000165], [170, 0.158186674118042], [193, 0.008375008900960287], [201, 0.03110225995381673], [208, 0.06250834465026855], [227, 0.00020615259806315103], [237, 0.00023818016052246094], [238, 0.07368000348409016], [246, 0.14022143681844076], [252, 0.24948914845784506], [263, 0.1399103800455729], [282, 0.02316935857137044], [226, 0.9193454583485922], [249, 1.172194242477417], [308, 0.09555959701538086], [320, 0.05266737937927246], [325, 0.19303528467814127]]
    planar_graphs.sort(key=lambda x: x[0])
    ########
    # PLOT #
    ########



    plt.figure(figsize=(10, 6))

    # Plotting each graph's data
    # x_values = [planar_graphs[i][0] for i in range(len(planar_graphs))]
    # y_values = [planar_graphs[i][1] for i in range(len(planar_graphs))]
    # plt.plot(x_values, y_values, label="Planar Graph", marker="o")
    
    # x_values = [multigraphs[i][0] for i in range(len(multigraphs))]
    # y_values = [multigraphs[i][1] for i in range(len(multigraphs))]
    # plt.plot(x_values, y_values, label="Multigraph", marker="o")

    

    # x_values = [bipartite_graphs_proba_0_75[i][0] for i in range(len(bipartite_graphs_proba_0_75))]
    # y_values = [bipartite_graphs_proba_0_75[i][1] for i in range(len(bipartite_graphs_proba_0_75))]
    # plt.plot(x_values, y_values, label="Bipartite Graph (p=0.75)", marker="o")

    # x_values = [bipartite_graphs_proba_0_5[i][0] for i in range(len(bipartite_graphs_proba_0_5))]
    # y_values = [bipartite_graphs_proba_0_5[i][1] for i in range(len(bipartite_graphs_proba_0_5))]
    # plt.plot(x_values, y_values, label="Bipartite Graph (p=0.5)", marker="o")

    # x_values = [bipartite_graphs_proba_1[i][0] for i in range(len(bipartite_graphs_proba_1))]
    # y_values = [bipartite_graphs_proba_1[i][1] for i in range(len(bipartite_graphs_proba_1))]
    # plt.plot(x_values, y_values, label="Bipartite Graph (p=1)", marker="o")

    x_values = [cycles[i][0] for i in range(len(cycles))]
    y_values = [cycles[i][1] for i in range(len(cycles))]
    plt.plot(x_values, y_values, label="Cycle Graph", marker="o")

    x_values = [tree_graphs[i][0] for i in range(len(tree_graphs))]
    y_values = [tree_graphs[i][1] for i in range(len(tree_graphs))]
    plt.plot(x_values, y_values, label="Tree Graph", marker="o")

    x_values = [complete_graph[i][0] for i in range(len(complete_graph))]
    y_values = [complete_graph[i][1] for i in range(len(complete_graph))]
    plt.plot(x_values, y_values, label="Complete Graph", marker="o")
    

    # Adding labels and title
    plt.xlabel("Number of edges")
    plt.ylabel("Time taken (s), log scale)")
    plt.yscale("log")  # Logarithmic scale for y-axis
    plt.xlim(1, 2500)
    plt.xscale("log")  # Logarithmic scale for x-axis
    plt.title("FastCut performances comparisons edges")
    plt.legend()

    # Show the plot
    plt.grid(True)
    plt.tight_layout()
    plt.savefig("./res/performance_comparison_edges_without_random.png", format="png")
    plt.show()



if __name__ == "__main__":
    #plot_lines_vertices()
    plot_lines_edges()

